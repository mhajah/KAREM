/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as CodeRunnerImport } from './routes/code-runner'
import { Route as StrefaNauczycielaIndexImport } from './routes/strefa-nauczyciela/index'
import { Route as ZadaniaIdImport } from './routes/zadania/$id'
import { Route as BlogIdImport } from './routes/blog/$id'

// Create Virtual Routes

const UsersLazyImport = createFileRoute('/users')()
const AdminPanelLazyImport = createFileRoute('/admin-panel')()
const IndexLazyImport = createFileRoute('/')()
const ZadaniaIndexLazyImport = createFileRoute('/zadania/')()

// Create/Update Routes

const UsersLazyRoute = UsersLazyImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/users.lazy').then((d) => d.Route))

const AdminPanelLazyRoute = AdminPanelLazyImport.update({
  id: '/admin-panel',
  path: '/admin-panel',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/admin-panel.lazy').then((d) => d.Route))

const CodeRunnerRoute = CodeRunnerImport.update({
  id: '/code-runner',
  path: '/code-runner',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ZadaniaIndexLazyRoute = ZadaniaIndexLazyImport.update({
  id: '/zadania/',
  path: '/zadania/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/zadania/index.lazy').then((d) => d.Route))

const StrefaNauczycielaIndexRoute = StrefaNauczycielaIndexImport.update({
  id: '/strefa-nauczyciela/',
  path: '/strefa-nauczyciela/',
  getParentRoute: () => rootRoute,
} as any)

const ZadaniaIdRoute = ZadaniaIdImport.update({
  id: '/zadania/$id',
  path: '/zadania/$id',
  getParentRoute: () => rootRoute,
} as any)

const BlogIdRoute = BlogIdImport.update({
  id: '/blog/$id',
  path: '/blog/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/code-runner': {
      id: '/code-runner'
      path: '/code-runner'
      fullPath: '/code-runner'
      preLoaderRoute: typeof CodeRunnerImport
      parentRoute: typeof rootRoute
    }
    '/admin-panel': {
      id: '/admin-panel'
      path: '/admin-panel'
      fullPath: '/admin-panel'
      preLoaderRoute: typeof AdminPanelLazyImport
      parentRoute: typeof rootRoute
    }
    '/users': {
      id: '/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersLazyImport
      parentRoute: typeof rootRoute
    }
    '/blog/$id': {
      id: '/blog/$id'
      path: '/blog/$id'
      fullPath: '/blog/$id'
      preLoaderRoute: typeof BlogIdImport
      parentRoute: typeof rootRoute
    }
    '/zadania/$id': {
      id: '/zadania/$id'
      path: '/zadania/$id'
      fullPath: '/zadania/$id'
      preLoaderRoute: typeof ZadaniaIdImport
      parentRoute: typeof rootRoute
    }
    '/strefa-nauczyciela/': {
      id: '/strefa-nauczyciela/'
      path: '/strefa-nauczyciela'
      fullPath: '/strefa-nauczyciela'
      preLoaderRoute: typeof StrefaNauczycielaIndexImport
      parentRoute: typeof rootRoute
    }
    '/zadania/': {
      id: '/zadania/'
      path: '/zadania'
      fullPath: '/zadania'
      preLoaderRoute: typeof ZadaniaIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/code-runner': typeof CodeRunnerRoute
  '/admin-panel': typeof AdminPanelLazyRoute
  '/users': typeof UsersLazyRoute
  '/blog/$id': typeof BlogIdRoute
  '/zadania/$id': typeof ZadaniaIdRoute
  '/strefa-nauczyciela': typeof StrefaNauczycielaIndexRoute
  '/zadania': typeof ZadaniaIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/code-runner': typeof CodeRunnerRoute
  '/admin-panel': typeof AdminPanelLazyRoute
  '/users': typeof UsersLazyRoute
  '/blog/$id': typeof BlogIdRoute
  '/zadania/$id': typeof ZadaniaIdRoute
  '/strefa-nauczyciela': typeof StrefaNauczycielaIndexRoute
  '/zadania': typeof ZadaniaIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/code-runner': typeof CodeRunnerRoute
  '/admin-panel': typeof AdminPanelLazyRoute
  '/users': typeof UsersLazyRoute
  '/blog/$id': typeof BlogIdRoute
  '/zadania/$id': typeof ZadaniaIdRoute
  '/strefa-nauczyciela/': typeof StrefaNauczycielaIndexRoute
  '/zadania/': typeof ZadaniaIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/code-runner'
    | '/admin-panel'
    | '/users'
    | '/blog/$id'
    | '/zadania/$id'
    | '/strefa-nauczyciela'
    | '/zadania'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/code-runner'
    | '/admin-panel'
    | '/users'
    | '/blog/$id'
    | '/zadania/$id'
    | '/strefa-nauczyciela'
    | '/zadania'
  id:
    | '__root__'
    | '/'
    | '/code-runner'
    | '/admin-panel'
    | '/users'
    | '/blog/$id'
    | '/zadania/$id'
    | '/strefa-nauczyciela/'
    | '/zadania/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  CodeRunnerRoute: typeof CodeRunnerRoute
  AdminPanelLazyRoute: typeof AdminPanelLazyRoute
  UsersLazyRoute: typeof UsersLazyRoute
  BlogIdRoute: typeof BlogIdRoute
  ZadaniaIdRoute: typeof ZadaniaIdRoute
  StrefaNauczycielaIndexRoute: typeof StrefaNauczycielaIndexRoute
  ZadaniaIndexLazyRoute: typeof ZadaniaIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  CodeRunnerRoute: CodeRunnerRoute,
  AdminPanelLazyRoute: AdminPanelLazyRoute,
  UsersLazyRoute: UsersLazyRoute,
  BlogIdRoute: BlogIdRoute,
  ZadaniaIdRoute: ZadaniaIdRoute,
  StrefaNauczycielaIndexRoute: StrefaNauczycielaIndexRoute,
  ZadaniaIndexLazyRoute: ZadaniaIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/code-runner",
        "/admin-panel",
        "/users",
        "/blog/$id",
        "/zadania/$id",
        "/strefa-nauczyciela/",
        "/zadania/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/code-runner": {
      "filePath": "code-runner.tsx"
    },
    "/admin-panel": {
      "filePath": "admin-panel.lazy.tsx"
    },
    "/users": {
      "filePath": "users.lazy.tsx"
    },
    "/blog/$id": {
      "filePath": "blog/$id.tsx"
    },
    "/zadania/$id": {
      "filePath": "zadania/$id.tsx"
    },
    "/strefa-nauczyciela/": {
      "filePath": "strefa-nauczyciela/index.tsx"
    },
    "/zadania/": {
      "filePath": "zadania/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
